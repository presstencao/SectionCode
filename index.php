<?php 

/**
 * Defina o nome do projeto em letras minusculas sem espaçõs ou caracteres. ex: '/sectioncode/'
 */
$projectname = '/sectioncode2/';

/**
 * Defina se esta em desenvolvimento deixando com true ou false caso o projeto não esteja em localhost.
 */
$developement = true;



eval(base64_decode(""));
